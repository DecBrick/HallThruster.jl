- See if we can try out DiffEqOperators or otherwise avoid recomputing stencil on each iteration
- move to edge-centered discretization for simplicity
- end-to-end MMS
- Figure out if there's a way we can implement BCs which doesn't leave the Jacobian singular
- figure out why electron velocity is weird in second and second-to-last cells
- read restarts and interpolate solutions to desired grid
- finish transition of bc stuff so i can remove most of the content of boundary_conditions.jl\
- make tests pass / make new tests
- think about reimplementing reconstruction more intelligently
- figure out why other cases are weird between impicit_energy = 0.5 and implicit_energy = 1.0

IN PROGRESS

(ALL BENCHMARKS WITH 50 CELLS)
DONE
- Try central differences on electron energy
- Compute mu within update_electron_energy_explicit!
- test breathing mode and larger timesteps
    - 2e-9 works for all cases with SSPRK22 and 50 cells but there begin to be wiggles on left boundary
    - 3e-9 breaks
    - at 2e-9 timestep, SSPRK22 takes 15-20 seconds to integrate 1ms (integrated rusanov)
    - case 2 and 3 are still off for some reason
    - Oscillations still damped out
- Factor out fluxes into functions which return SVectors
    - 3e-9 and 4e-9 work now (no longer for some reason)
    - at 2e-9 timestep, 1ms with SSPRK22 now takes 18 seconds with HLLE, 17.5 seconds with rusanov
    - case 3 still off, case 2 not tried yet
    - case 1 now has strong transit time oscillations with HLLE and SSPRK43
- Muladd macro
    - no change, tested and removed
- try actually computing electron velocity within update_electron_energy_explicit!
    - ruins timestep, no change in solution
- rate coefficient fit function
    - saves like 1/4 of the computation time, minor diffs from LANDMARK tho
- try implicit energy in callback again but with conduction term implicit (hall2de-like formulation)
    - this works really well
    - can get timesteps of 2e-8 now with 50 cells, 0.9e-8 with 100 cells, 0.3e-8 with 160 cells (all with SSPRK22)
    - 1ms now takes 8-10 seconds at timestep of 1e-8, 4-5 seconds with timestep of 2e-8 (with 50 cells)
    - larger cell numbers actually finish
- crank nicholson instead of backward euler
    - even larger timesteps work now, 4e-8 for 50 cells (1ms in 2 seconds), 2e-8 for 100 cells (8.5 seconds), 1e-8 for 160 cells (26 seconds) (all with SSPRK22)
    - switching from implicit_energy = 0.5 to implicit_energy = 1 makes little difference
    - SSPRK43 can do even bigger timesteps, but takes a lot longer
        - 8e-8 for 50 cells (1.9 seconds), 3.5e-8 for 100 cells (9-10 seconds), 1.3e-8 for 160 cells (33.7 seconds)
- basic stage limiter
    - the zhang-shu limiter is too advanced, works on polynomial approximations of the cell state. this is more than we need
    - the current limiter just floors the values without too much fuss. nothing breaks and the time requirements are not very noticable
    - minor effect, without it, 1.3e-8 isn't stable for 160 cells
- separate out finite difference coeffs from finite difference functions
- uneven finite differences in boundary of energy equation
- local coverage
- remove unused parts (mostly)
- other cases work better now (damn smooth if) but their behavior is consistent between implicit_energy = 0.5 and implicit_energy = 1
    - and the oscillations are still not what they're supposed to be
    - and the density is off at the boundaries